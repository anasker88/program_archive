・実行形式について
rustで実装を行った。
実行時に用いるコンパイラはrustc 1.71.0 (8ede3aae2 2023-07-12)であり、/reversiでcargo runを入力することで実行される。
--をオプションにつけると指定のプロンプト通りに引数を設定できるが、デフォルトでplayer名T_A及びサーバー名localhost,port番号3000が指定されている。
rustでは--releaseをつけると最適化レベル3でコンパイルが行われて高速で動作するようになるが、Cargo.tomlで最適化レベルを3に設定しているため--releaseをつける必要はない。

・AIを強くするための工夫
強いAIを作るために必要な条件としては、より深くまで探索できること、より勝ち負けに直結する評価関数を参照していることがあげられる。
より深くまで探索するための工夫としては以下のようなものを行った。
有効手の探索を行う際の盤面の管理はビットボードによって行い、手を打った際の盤面の状態の計算や有効手の列挙、石のカウントなどはできるだけシフト演算によって行うようにすることで、探索を高速化し、できるだけ深いところまで読めるようにした。
また、探索はネガアルファ法を用いた反復深化法によって行い、反復深化の際に一個前の深さの探索の際に最善手とされたものを最初に調べるようにすることで多くの枝刈りが起こるようにして探索の高速化を図った。
加えて、制限時間がある以上、すべての場面で同じように先読みを行うよりは重要な場面で深くまで先読みを行うのがよいと思われる。
このため、終盤に向かうにつれ読みの深さが深まるようにし、残り16手以降は読み切りを行うようにした。
ここで負けを読んでしまった場合であるが、負けを呼んだ場合に備えて全体の思考時間を減らしてしまっては本末転倒であるので読みの深さは比較的浅めにしたが、最終的な勝ち負けに直結する石の数の差を評価関数として用いることで最大限の抵抗を行うようにした。
評価関数については、探索の際に何回も呼び出されるものであるため、そこまで計算量が多くならないように気を付けた。
読める手数が限られている以上評価関数には勝ち負けに直結すること、そして急に大きく変化するようなことがないことが求められる。
これを満たすべく、今回の評価関数では以下から計算を行った。
1.角の石
角の石は絶対にひっくり返されないので非常に重要なものである。そのため、自分が角の石をとればいいスコアに、相手がとれば悪いスコアになるようにした。また、セオリーに従い、終盤に近付いた際の角の価値は低めに設定した。
角の隣の石を取ってしまうと角が相手に取られやすくなるので、角の隣は点数を低くつけることも検討したが、強くならなかったのでやめた。
2.合法手の数
たくさんひっくり返されて急減することがある石の数とは違い、合法手の数はどんな場合でも安定していることが多く、オセロのセオリーとしても相手の打てる場所を減らすことがよいとされている。
相手の合法手が0になるとパスとなりもう一度自分が打てるようになるので、極めて有利である。
以上の理由から戦況を表すパラメータの一つとして合法手の数を採用した。
また、単純に相手と自分の合法手の差のみをパラメータにすることもできるが、合法手が1個しかないのと2つある状況の差は合法手が12個ある場合と13個ある場合の差よりもずっと大きいので、それを反映すべく(合法手の数+1)の逆数に比例する項もあわせてパラメータとして用いることにした。
3.石の数
最終的には石の数を最大化しなくてはならないが、序盤、中盤においては石の数が少ないほうが将来的に合法手が多くなるので、自分の石の数が相手の石の数より少ないほど高得点となるようパラメータをセットした。
以上3つのパラメータの線形結合によって評価関数を計算している。これらにかかる係数については、自分のコード同士で戦わせたり、友人のものとたたかわせて結果を比較するなどして最適化した。
以上は本質的に強いAIを作るための工夫であったが、今回のルールではそもそも制限時間である1分を過ぎてしまうと負け扱いになってしまうため、制限時間を過ぎない工夫も必要になる。
今回の実装では探索したノード数を記録しておき、それがある値を超えないようにした。この値は試行錯誤して得たものであり、環境に依存するが、本番に用いられるマシンの性能は学科PCとほぼ同じであったので問題ないと判断した。


・AIの強さについて
1.ランダムAI
ランダムAIとの対戦では負けることはなかった。ランダムAIは理論上最強の手を選び続ける可能性もあるが、その可能性は限りなく0に近く、実際起こることはなかった。
2.友人(米田君)のAIとの対戦
7/20あたりに米田君のオセロAIのコードをもらっており、それと戦わせたところ6パターン中4勝であった。2敗したのは後攻の時であり、私の評価関数でも米田君の評価関数でも私が優勢であったにもかかわらず負けたので、実力が拮抗した試合では途中にパスが起こらず、最後に石を打つことになる後攻が有利になっている可能性がある。
3.友人(中島君)のAIとの対戦
中島君から完成版のAIをもらって対戦したが、2戦0勝であった。私と中島君のAIはどちらも決定的なので、何度やっても同じ結果になる。評価関数の値は単調に悪化しており、中島君の評価関数のほうが将来的な有利不利をよく反映できていると考えられる。一方で、私の評価関数も現在の有利不利に関してはそこそこいい精度で分析できているといえる。
4.人間(自分との対戦)
私がオセロが苦手なのもあるが、何度か対戦してみてまったくAIに勝つことはできなかった。合法手の数が少なく深くまで探索が行えるオセロでは人間よりAIのほうが有利であることがうかがえる。